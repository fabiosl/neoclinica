#summary Página que guarda o projeto Arquitetural

= Projeto Arquitetural =
http://dl.dropbox.com/u/4330681/LES/Imagens/ScreenShot007.png

*Imagem 01- Arquitetura do Sistema*
==Descrição:==
O sistema a ser desenvolvido durante a disciplina será desenvolvido com base em uma arquitetura composta por três camadas. Esta arquitetura envolve a separação das funcionalidades usando camadas com o objetivo de separar a *lógica de apresentação*, a *lógica de negócio* e a *lógica de acesso a dados*.
A separação em três camadas torna o sistema mais flexível, de modo que partes podem ser alteradas independentemente. Com o emprego da arquitetura em três camadas, qualquer alteração em uma determinada camada não influi nas demais, desde que o mecanismo de comunicação entre elas permaneça inalterado. 
O sistema, a princípio, será concebido para funcionar como uma aplicação standalone em um servidor Web (Apache Tomcat), e isso faz com que o mesmo possa ser executado tanto localmente, via intranet, como remotamente, via internet.  

===Camada de Apresentação===
A camada de apresentação será desenvolvida com auxílio do framework para desenvolvimento Web Grails{1}. O framework, em si, já faz uso de uma arquitetura de três camadas (Model View Controller – MVC  {2}), mas o projeto a ser desenvolvido fará uso principalmente das facilidades de Grails para o desenvolvimento de interface gráfica. A geração do HTML{3} das páginas será feito via Groovy Server Pages – GSP{4} e/ou Java Server Pages{5}.

===Camada de Negócio===
A camada de negócio do sistema a ser desenvolvido será feita usando a tecnologia Java{6}. A escolha de Java, ao invés de outra qualquer, deu-se devido à experiência da equipe de desenvolvimento com a mesma e por causa do grande número de ferramentas disponíveis que auxiliam o desenvolvimento em tal plataforma.

===Camada de Dados===
A persistência de dados do sistema a ser desenvolvido será auxiliada pelo SGBD relacional MySQL{7}. A escolha do MySQL deu-se principalmente, pelo fato de o mesmo ser uma tecnologia de código aberto e pelo fato de o mesmo não necessitar de licenças ou taxas para seu uso. Adotaremos, preferencialmente, o padrão DAO{8} para realizar a persistência dos dados em nosso banco.

==Referências Externas: ==
{1} -  Grails Framework. http://grails.org/. Acesso em 31/08/2010

{2} - Model View Controller. http://www.dsc.ufcg.edu.br/~jacques/cursos/map/html/arqu/mvc/mvc.htm. Acesso em 31/08/2010.

{3} – HTML. http://pt.wikipedia.org/wiki/HTML. Acesso em 31/08/2010.

{4} -  Groovy Server Pages. http://en.wikipedia.org/wiki/Groovy_Server_Pages. Acesso em 31/08/2010.

{5} – Java Server Pages. http://java.sun.com/products/jsp/. Acesso em 31/08/2010.

{6} - Java. http://www.oracle.com/technetwork/java/index.html. Acesso em 31/08/2010.

{7} - SGBD MySQL. http://www.mysql.com/. Acesso em 31/08/2010.

{8} - Padrão DAO http://java.sun.com/blueprints/corej2eepatterns/Patterns/DataAccessObject.html. Acesso em 31/08/2010.